# Generated by Django 5.1 on 2025-02-07 21:44

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('weight_in_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fragile', models.BooleanField(default=False)),
                ('origin', models.CharField(max_length=200)),
                ('destination', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_in_duty', models.BooleanField(default=False, help_text='Check if cargo is currently being transported.')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('MANAGER', 'Manager'), ('DRIVER', 'Driver')], default='OTHER', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('national_id', models.FileField(null=True, upload_to='national_ids/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('employ_date', models.DateField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('djibouti_license_image', models.ImageField(blank=True, null=True, upload_to='licenses/djibouti/')),
                ('djibouti_license_expiration', models.DateField(blank=True, null=True)),
                ('ethiopian_license_image', models.ImageField(blank=True, null=True, upload_to='licenses/ethiopia/')),
                ('ethiopian_license_expiration', models.DateField(blank=True, null=True)),
                ('staff_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to='transportation.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_location', models.CharField(max_length=200)),
                ('start_latitude', models.FloatField(blank=True, null=True)),
                ('start_longitude', models.FloatField(blank=True, null=True)),
                ('end_location', models.CharField(max_length=200)),
                ('end_latitude', models.FloatField(blank=True, null=True)),
                ('end_longitude', models.FloatField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('initial_kilometer', models.PositiveIntegerField(blank=True, help_text='Starting odometer reading', null=True)),
                ('final_kilometer', models.PositiveIntegerField(blank=True, help_text='Ending odometer reading', null=True)),
                ('cargo_type', models.CharField(blank=True, help_text='Type or description of cargo', max_length=100, null=True)),
                ('cargo_load', models.DecimalField(blank=True, decimal_places=2, help_text='Cargo load/weight in relevant units (e.g., tons)', max_digits=10, null=True)),
                ('tariff_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Tariff rate applied to cargo load', max_digits=10, null=True)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='IN_PROGRESS', max_length=20)),
                ('is_in_duty', models.BooleanField(default=False, help_text='Check if the trip is currently active/in duty.')),
                ('distance_traveled', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transportation.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_paid', models.BooleanField(default=False)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='transportation.trip')),
            ],
        ),
        migrations.CreateModel(
            name='TripFinancial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_revenue', models.DecimalField(blank=True, decimal_places=2, help_text='Total revenue realized for the trip', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_expense', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all operational and other expenses for the trip', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('operational_expense', models.DecimalField(blank=True, decimal_places=2, help_text='Amount given to the driver as an operational expense budget', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('income_before_tax', models.DecimalField(blank=True, decimal_places=2, help_text='Calculated as (total_revenue - total_expense)', max_digits=15, null=True)),
                ('payable_receivable_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Calculated as (operational_expense - total_expense). A positive value indicates money receivable from the driver; a negative value means extra money should be paid to the driver.', max_digits=15, null=True)),
                ('net_profit_margin', models.DecimalField(blank=True, decimal_places=2, help_text='Net profit margin as a percentage, calculated as (income_before_tax / total_revenue) * 100.', max_digits=5, null=True)),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial', to='transportation.trip')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('FUEL', 'Fuel'), ('HELPER', 'Helper'), ('MAINTENANCE', 'Maintenance'), ('SECURITY', 'Security'), ('TOLL', 'Toll'), ('OTHER', 'Other')], default='OTHER', max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('note', models.TextField(blank=True, help_text='Additional details for this expense', null=True)),
                ('trip_financial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='transportation.tripfinancial')),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=20, unique=True)),
                ('truck_type', models.CharField(blank=True, max_length=50)),
                ('capacity_in_tons', models.DecimalField(decimal_places=2, max_digits=6)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Maintenance')], default='AVAILABLE', max_length=20)),
                ('is_in_duty', models.BooleanField(default=False, help_text='Check if this truck is currently in use.')),
                ('mileage_km', models.PositiveIntegerField(default=0, help_text='Total mileage in kilometers.')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transportation.driver')),
            ],
        ),
        migrations.AddField(
            model_name='trip',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transportation.truck'),
        ),
        migrations.CreateModel(
            name='ServiceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('service_type', models.CharField(help_text='e.g. Engine repair, Oil change', max_length=255)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_image', models.ImageField(blank=True, help_text='Receipt or photo from the service.', null=True, upload_to='service_docs/')),
                ('vendor', models.CharField(blank=True, help_text='Name of the vendor or garage.', max_length=255)),
                ('next_service_date', models.DateField(blank=True, help_text='Suggested next service date.', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this service.')),
                ('truck', models.ForeignKey(help_text='Truck that received this service.', on_delete=django.db.models.deletion.CASCADE, related_name='services', to='transportation.truck')),
            ],
        ),
        migrations.CreateModel(
            name='ReplacedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(max_length=255)),
                ('date_replaced', models.DateField()),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('replacement_image', models.ImageField(blank=True, help_text='Picture of replaced part or receipt.', null=True, upload_to='replacement_docs/')),
                ('part_serial_number', models.CharField(blank=True, max_length=100)),
                ('warranty_expiration', models.DateField(blank=True, help_text="Expiration date of the part's warranty.", null=True)),
                ('notes', models.TextField(blank=True, help_text='Any notes regarding this replacement.')),
                ('truck', models.ForeignKey(help_text='Truck that had this item replaced.', on_delete=django.db.models.deletion.CASCADE, related_name='replaced_items', to='transportation.truck')),
            ],
        ),
        migrations.CreateModel(
            name='MajorAccident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(blank=True, help_text='Accident location', max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('MINOR', 'Minor'), ('MAJOR', 'Major'), ('TOTAL', 'Total Loss')], default='MINOR', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('accident_image', models.ImageField(blank=True, null=True, upload_to='accidents/')),
                ('cost_of_damage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('insurance_claim_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_reported', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transportation.driver')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidents', to='transportation.truck')),
            ],
        ),
    ]
